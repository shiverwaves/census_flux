name: Census Flux Pipeline - Simple MySQL Setup

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ 'data_pipeline/**' ]

jobs:
  run-data-pipeline:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          # Simplified: Just root user and database
          MYSQL_ROOT_PASSWORD: "root_password_123"
          MYSQL_DATABASE: "census_flux"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot_password_123"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=30s
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Wait for MySQL and setup
        run: |
          echo "Waiting for MySQL to be ready..."
          sleep 30
          
          # Test root connection
          mysql --host=127.0.0.1 --port=3306 -u root -proot_password_123 -e "SELECT 'MySQL is ready!' as status;"
          
          # Create app user and grant permissions
          mysql --host=127.0.0.1 --port=3306 -u root -proot_password_123 -e "
            CREATE USER IF NOT EXISTS 'census_user'@'%' IDENTIFIED BY 'app_password_123';
            GRANT ALL PRIVILEGES ON census_flux.* TO 'census_user'@'%';
            FLUSH PRIVILEGES;
            SELECT 'User created successfully' as status;
          "
          
          # Test app user connection
          mysql --host=127.0.0.1 --port=3306 -u census_user -papp_password_123 census_flux -e "SELECT 'App user works!' as status;"
          
      - name: Initialize database schema
        run: |
          echo "Initializing database schema..."
          mysql --host=127.0.0.1 --port=3306 -u census_user -papp_password_123 census_flux < sql/init.sql
          echo "✅ Database schema initialized"
          
      - name: Create working directories
        run: mkdir -p logs reports
          
      - name: Run Census data pipeline
        env:
          CENSUS_API_KEY: "95abb939145815041b5edf021b68593ae0241489"
          DB_CONNECTION_STRING: "mysql+pymysql://census_user:app_password_123@127.0.0.1:3306/census_flux"
          LOG_LEVEL: INFO
        run: |
          echo "Starting Census data pipeline..."
          python data_pipeline/hh_fam_type_data.py
          echo "✅ Pipeline completed successfully"
          
      - name: Verify data load
        env:
          DB_CONNECTION_STRING: "mysql+pymysql://census_user:app_password_123@127.0.0.1:3306/census_flux"
        run: |
          echo "Verifying data load..."
          python data_pipeline/verify_data_load.py
          
      - name: Show final results
        run: |
          echo "=== Final Database Status ==="
          mysql --host=127.0.0.1 --port=3306 -u census_user -papp_password_123 census_flux -e "
            SHOW TABLES;
            SELECT COUNT(*) as states_count FROM states;
            SELECT COUNT(*) as probabilities_count FROM household_family_type_probabilities;
          "
          
      - name: Archive results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: census-flux-results-${{ github.run_number }}
          path: |
            reports/
            logs/
          retention-days: 90